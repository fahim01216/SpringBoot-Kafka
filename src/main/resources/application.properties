spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.group-id= myGroup
spring.kafka.consumer.auto-offset-reset= earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer

#spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.topic.name= kafkaTopic
spring.kafka.json-topic.name= jsonKafkaTopic


# command to start zookeeper-server
# .\bin\windows\zookeeper-server-start.bat .\config\zookeeper.properties

# command to start kafka-server
# .\bin\windows\kafka-server-start.bat .\config\server.properties

#command to create topics to store events
#.\bin\windows\kafka-topics.bat --create --topics wikimedia --bootstrap-server localhost:9092

#command to produce events in the topic
#.\bin\windows\kafka-console-producer.bat --topic wikimedia --bootstrap-server localhost:9092

# command to check whether message is consumed or not
# .\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic wikimedia --from-beginning